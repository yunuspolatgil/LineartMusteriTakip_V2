// <auto-generated />
using System;
using AspnetCoreStarter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AspnetCoreStarter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250727162048_AddBildirimEntity")]
    partial class AddBildirimEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspnetCoreStarter.Models.BaseBildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BildirimType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("EkVeri")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HedefUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Icon")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OkunmaZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Oncelik")
                        .HasColumnType("int");

                    b.Property<bool>("OtomatikKapat")
                        .HasColumnType("bit");

                    b.Property<int>("OtomatikKapatmaSuresi")
                        .HasColumnType("int");

                    b.Property<bool>("Silinebilir")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SonGecerlilikTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SonGosterimZamani")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tur")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bildirimler");

                    b.HasDiscriminator<string>("BildirimType").HasValue("BaseBildirim");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AspnetCoreStarter.Models.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Aktif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Musteriler", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdSoyad = "Ahmet Yılmaz",
                            Adres = "İstanbul, Kadıköy",
                            Aktif = true,
                            CreateDate = new DateTime(2024, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmet.yilmaz@email.com",
                            Telefon = "0532-123-4567"
                        },
                        new
                        {
                            Id = 2,
                            AdSoyad = "Ayşe Kaya",
                            Adres = "Ankara, Çankaya",
                            Aktif = true,
                            CreateDate = new DateTime(2024, 1, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ayse.kaya@email.com",
                            Telefon = "0533-987-6543"
                        });
                });

            modelBuilder.Entity("AspnetCoreStarter.Models.IslemBildirimi", b =>
                {
                    b.HasBaseType("AspnetCoreStarter.Models.BaseBildirim");

                    b.Property<bool>("Basarili")
                        .HasColumnType("bit");

                    b.Property<string>("EntityAdi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HataMesaji")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IslemTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasDiscriminator().HasValue("Islem");
                });

            modelBuilder.Entity("AspnetCoreStarter.Models.MusteriBildirimi", b =>
                {
                    b.HasBaseType("AspnetCoreStarter.Models.BaseBildirim");

                    b.Property<string>("IslemTuru")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IslemYapan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MusteriAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("int");

                    b.ToTable("Bildirimler", t =>
                        {
                            t.Property("IslemTuru")
                                .HasColumnName("MusteriBildirimi_IslemTuru");
                        });

                    b.HasDiscriminator().HasValue("Musteri");
                });

            modelBuilder.Entity("AspnetCoreStarter.Models.SistemBildirimi", b =>
                {
                    b.HasBaseType("AspnetCoreStarter.Models.BaseBildirim");

                    b.Property<bool>("AnaSayfadaGoster")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("GosterimBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GosterimBitis")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kategori")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TumKullanicilara")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("YayinlanmaZamani")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Sistem");
                });

            modelBuilder.Entity("AspnetCoreStarter.Models.ValidationBildirimi", b =>
                {
                    b.HasBaseType("AspnetCoreStarter.Models.BaseBildirim");

                    b.Property<string>("AlanAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FormAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ValidationMesaji")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasDiscriminator().HasValue("Validation");
                });
#pragma warning restore 612, 618
        }
    }
}
